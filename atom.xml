<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[Thinkml's blog]]></title>
  <subtitle><![CDATA[happy wife, happy life...]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://needpp.com//"/>
  <updated>2015-07-01T14:48:00.268Z</updated>
  <id>http://needpp.com//</id>
  
  <author>
    <name><![CDATA[thinkml]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[markdown编辑器]]></title>
    <link href="http://needpp.com/2015/07/01/markdown%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    <id>http://needpp.com/2015/07/01/markdown编辑器/</id>
    <published>2015-07-01T04:38:40.000Z</published>
    <updated>2015-07-01T14:48:00.268Z</updated>
    <content type="html"><![CDATA[<p>使用七牛作图床，迁移至静态博客后贴图太麻烦，需要上传图片到图床，然后把链接复制回文件进行引用。简直就是浪费绳命！</p>
<p>于是，折腾！ 找到轮子改造之…</p>
<p>添加新特征： 粘贴图片 — &gt; 七牛云 —&gt; 引用</p>
<p><img src="http://7punic.com1.z0.glb.clouddn.com/0de23c00-1fff-11e5-a6a9-b5862c47e4ba.png" alt=""></p>
<p>毕！</p>
<p>轮子：</p>
<ul>
<li><a href="https://github.com/dcycome/Mango" target="_blank" rel="external">Mango</a></li>
<li><a href="http://benq.im/2015/04/28/hexomd-05/" target="_blank" rel="external">骑兵程序员</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>使用七牛作图床，迁移至静态博客后贴图太麻烦，需要上传图片到图床，然后把链接复制回文件进行引用。简直就是浪费绳命！</p>
<p>于是，折腾！ 找到轮子改造之…</p>
<p>添加新特征： 粘贴图片 — &gt; 七牛云 —&gt; 引用</p>
<p><img src="h]]>
    </summary>
    
      <category term="markdown" scheme="http://needpp.com/tags/markdown/"/>
    
      <category term="tools" scheme="http://needpp.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[细思恐极]]></title>
    <link href="http://needpp.com/2015/06/30/%E7%BB%86%E6%80%9D%E6%81%90%E6%9E%81/"/>
    <id>http://needpp.com/2015/06/30/细思恐极/</id>
    <published>2015-06-30T06:35:52.000Z</published>
    <updated>2015-06-30T01:38:56.743Z</updated>
    <content type="html"><![CDATA[<p>华丽的分割线</p>
<hr>
<p><img src="http://7punic.com1.z0.glb.clouddn.com/dvl2y5iqq3v504yx6vzyj5gcle.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>华丽的分割线</p>
<hr>
<p><img src="http://7punic.com1.z0.glb.clouddn.com/dvl2y5iqq3v504yx6vzyj5gcle.png" alt=""></p>
]]>
    </summary>
    
      <category term="life" scheme="http://needpp.com/tags/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[起风了]]></title>
    <link href="http://needpp.com/2015/06/30/%E8%B5%B7%E9%A3%8E%E4%BA%86/"/>
    <id>http://needpp.com/2015/06/30/起风了/</id>
    <published>2015-06-29T16:00:00.000Z</published>
    <updated>2015-06-30T12:58:25.363Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7punic.com1.z0.glb.clouddn.com/y69mc5l7fpjbgr0vh3dty6o0i1.png" alt=""></p>
<p>风起了，唯有努力生存！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7punic.com1.z0.glb.clouddn.com/y69mc5l7fpjbgr0vh3dty6o0i1.png" alt=""></p>
<p>风起了，唯有努力生存！</p>
]]>
    </summary>
    
      <category term="life" scheme="http://needpp.com/tags/life/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[临时存储]]></title>
    <link href="http://needpp.com/2015/06/29/%E4%B8%B4%E6%97%B6%E5%AD%98%E5%82%A8/"/>
    <id>http://needpp.com/2015/06/29/临时存储/</id>
    <published>2015-06-28T16:00:00.000Z</published>
    <updated>2015-06-28T13:58:59.465Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="temp" scheme="http://needpp.com/tags/temp/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[数学公式测试]]></title>
    <link href="http://needpp.com/2015/06/25/mathjax/"/>
    <id>http://needpp.com/2015/06/25/mathjax/</id>
    <published>2015-06-25T06:35:52.000Z</published>
    <updated>2015-06-25T06:46:50.331Z</updated>
    <content type="html"><![CDATA[<p>$$ x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>$$ x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$</p>
]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[科学上网备忘]]></title>
    <link href="http://needpp.com/2015/06/08/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    <id>http://needpp.com/2015/06/08/科学上网/</id>
    <published>2015-06-07T16:00:00.000Z</published>
    <updated>2015-06-25T07:33:14.930Z</updated>
    <content type="html"><![CDATA[<p>优选服务器:<br>(自动优选, 不定期更换, 请使用域名为服务器地址.)<br>IPv4: auto.v4.omicronplus.com<br>IPv6: auto.v6.omicronplus.com<br>加密方法: aes-256-cfb<br>端口: 4000<br>密码: <em>**</em></p>
<p>欧洲服务器-1:<br>IPv4: eu1.v4.omicronplus.com<br>IPv6: eu1.v6.omicronplus.com<br>加密方法: aes-256-cfb<br>端口: 4000<br>密码: <em>**</em></p>
<p>使用指南</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">sslocal -s <span class="attribute">auto</span><span class="class">.v4</span><span class="class">.omicronplus</span><span class="class">.com</span> -<span class="tag">p</span> <span class="number">4000</span> -k pwd</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>优选服务器:<br>(自动优选, 不定期更换, 请使用域名为服务器地址.)<br>IPv4: auto.v4.omicronplus.com<br>IPv6: auto.v6.omicronplus.com<br>加密方法: aes-256-cfb<br>端口: 4000<]]>
    </summary>
    
      <category term="ss" scheme="http://needpp.com/tags/ss/"/>
    
      <category term="tools" scheme="http://needpp.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[决策树、CART、GBRT、Adaboost]]></title>
    <link href="http://needpp.com/2015/05/25/%E5%86%B3%E7%AD%96%E6%A0%91%E3%80%81CART%E3%80%81GBRT%E3%80%81Adaboost/"/>
    <id>http://needpp.com/2015/05/25/决策树、CART、GBRT、Adaboost/</id>
    <published>2015-05-24T16:00:00.000Z</published>
    <updated>2015-06-26T05:03:42.989Z</updated>
    <content type="html"><![CDATA[<p>决策树是以实例为基础的归纳学习算法。 它从一组无次序、无规则的元组中推理出决策树表示形式的分类规则。它采用自顶向下的递归方式，在决策树的内部结点进行属性值的比较，并根据不同的属性值从该结点向下分支，叶结点是要学习划分的类。从根到叶结点的一条路径就对应着一条合取规则，整个决策树就对应着一组析取表达式规则。<br><a id="more"></a></p>
<h3 id="ID3算法"><a href="http://dataunion.org/13680.html" target="_blank" rel="external">ID3算法</a></h3><p>ID3算法的优点是：算法的理论清晰，方法简单，学习能力较强。<br>ID3算法的缺点是：只对比较小的数据集有效，且对<code>噪声比较敏感</code>，当训练数据集加大时，决策树可能会随之改变</p>
<h3 id="C4-5"><a href="http://dataunion.org/13526.html" target="_blank" rel="external">C4.5</a></h3><p>C4.5是机器学习算法中的另一个分类决策树算法，它是基于ID3算法进行改进后的一种重要算法，相比于ID3算法，改进有如下几个要点：</p>
<ul>
<li>ID3选择属性用的是子树的信息增益，而C4.5用的是信息增益率。</li>
<li>在决策树构造过程中进行剪枝，因为某些具有很少元素的结点可能会使构造的决策树过适应（Overfitting），如果不考虑这些结点可能会更好。</li>
<li>对非离散数据也能处理。</li>
<li>能够对不完整数据进行处理。</li>
</ul>
<p>C4.5算法的优点是：产生的分类规则易于理解，准确率较高。<br>C4.5算法的缺点是：在构造树的过程中，需要对数据集进行多次的顺序扫描和排序，因而导致算法的低效。</p>
<p><code>信息增益比率</code>度量是用ID3算法中的的增益度量Gain(D，X)和分裂信息度量SplitInformation(D，X)来共同定义的。分裂信息度量SplitInformation(D，X）就相当于特征X（取值为x1，x2，……，xn，各自的概率为P1，P2，…，Pn，Pk就是样本空间中特征X取值为xk的数量除上该样本空间总数）的熵。<br>SplitInformation(D，X） = -P1 log2(P1)-P2 log2(P)-,…,-Pn log2(Pn)<br>GainRatio(D,X) = Gain(D,X)/SplitInformation(D,X)<br>在ID3中用信息增益选择属性时偏向于选择分枝比较多的属性值，即取值多的属性，在C4.5中由于除以SplitInformation(D,X)=H(X)，可以削弱这种作用。<br>另外<a href="http://blog.sina.com.cn/s/blog_60acd6780100djcf.html" target="_blank" rel="external">C4.5能够处理连续型属性</a>。而ID3只能处理离散型属性。</p>
<p>处理连续型属性过程</p>
<ol>
<li>对属性的取值进行排序</li>
<li>两个属性取值之间的中点作为可能的分裂点，将数据集分成两部分，计算每个可能的分裂点的信息增益（InforGain）</li>
<li>对每个分裂点的信息增益(InforGain)就行修正：减去log2(N-1)/|D|</li>
<li>选择修正后信息增益(InforGain)最大的，分裂点作为该属性的<code>最佳分裂点</code></li>
<li>计算最佳分裂点的信息增益率（Gain Ratio）作为属性的Gain Ratio</li>
<li>选择Gain Ratio最大的属性作为<code>最佳分裂属性</code></li>
</ol>
<h3 id="CART分类回归树"><a href="http://dataunion.org/5771.html" target="_blank" rel="external">CART分类回归树</a></h3><p>分类树：二分（简化决策树规模，提高运行效率）、GINI指数最小特征作为划分节点。  GINI值越小，表明样本的纯净度越高（即该样本只属于同一类的概率越高）。<br>回归树：CART则使用最小剩余方差(Squared Residuals Minimization)来决定Regression Tree的最优划分，该划分准则是<code>期望划分之后的子树误差方差最小</code>。</p>
<p>针对连续值处理参照c4.5做法，需要注意的地方是：<br>根据<code>离散特征分支划分数据集时，子数据集中不再包含该特征</code>（因为每个分支下的子数据集该特征的取值就会是一样的，信息增益或者Gini Gain将不再变化）；而根据连续特征分支时，各分支下的子数据集必须依旧包含该特征（当然，左右分支各包含的分别是取值小于、大于等于分裂值的子数据集），因为该连续特征再接下来的树分支过程中可能依旧起着决定性作用。</p>
<p>关于减枝—补充。。。。</p>
<h3 id="随机森林"><a href="http://dataunion.org/12046.html" target="_blank" rel="external">随机森林</a></h3><p>随机的方式建立一个森林，森林里面有很多的决策树组成，随机森林的每一棵决策树之间是没有关联的。随机森林是一种统计学习理论，其随机有两个方面：首先是在训练的每一轮中，都是对原始样本集有放回的抽取固定数目的样本点，形成k个互不相同的样本集。第二点是：对于每一个决策树的建立是从总的属性中随机抽取一定量的属性作分裂属性集，这样对于k个树分类器均是不相同的。由随机生成的k个决策树组成了随机森林。对于每一个决策树来讲，其分裂属性是不断的选取具有最大信息增益的属性进行排列。整个随机森林建立后，最终的分类标准采用投票机制得到可能性最高的结果。<br>下图是随机森林构建的过程：</p>
<p><img src="http://needpp.qiniudn.com/2015/05/25/71347a0c-02c2-11e5-9c7f-a12adcdca7aa.jpg" alt=""></p>
<p>随机森林优点：<br>1.通过对许多分类器进行组合，它可以产生高准确度的分类器；<br>2.它可以处理大量的输入变量；<br>3.它可以在决定类别时，评估变量的重要性；<br>4.在建造森林时，它可以在内部对于一般化后的误差产生不偏差的估计；<br>5.它包含一个好方法可以估计遗失的资料，并且，如果有很大一部分的资料遗失，仍可以维持准确度。<br>6.它提供一个实验方法，可以去侦测变量之间的相互作用；<br>7.学习过程是很快速的；<br>8.<code>对异常值和噪声具有很好的容忍度，且不容易出现过拟合</code>；<br>随机森林的缺点：<br>1.对于有不同级别的属性的数据，级别划分较多的属性会对随机森林产生更大的影响，所以随机森林在这种数据上产出的属性权值是不可信的；<br>2.单棵决策树的预测效果很差：由于随机选择属性，使得单棵决策树的预测效果很差。</p>
<h3 id="AdaBoost"><a href="http://dataunion.org/5341.html" target="_blank" rel="external">AdaBoost</a></h3><p>l</p>
<h3 id="GBRT"><a href="http://dataunion.org/5341.html" target="_blank" rel="external">GBRT</a></h3><p>l</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>决策树是以实例为基础的归纳学习算法。 它从一组无次序、无规则的元组中推理出决策树表示形式的分类规则。它采用自顶向下的递归方式，在决策树的内部结点进行属性值的比较，并根据不同的属性值从该结点向下分支，叶结点是要学习划分的类。从根到叶结点的一条路径就对应着一条合取规则，整个决策树就对应着一组析取表达式规则。<br>]]>
    
    </summary>
    
      <category term="boost" scheme="http://needpp.com/tags/boost/"/>
    
      <category term="gbrt" scheme="http://needpp.com/tags/gbrt/"/>
    
      <category term="ml" scheme="http://needpp.com/tags/ml/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[多服务器间如何共享session]]></title>
    <link href="http://needpp.com/2015/05/25/%E5%A4%9A%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%97%B4%E5%A6%82%E4%BD%95%E5%85%B1%E4%BA%ABsession/"/>
    <id>http://needpp.com/2015/05/25/多服务器间如何共享session/</id>
    <published>2015-05-24T16:00:00.000Z</published>
    <updated>2015-06-26T05:03:05.653Z</updated>
    <content type="html"><![CDATA[<p>留空</p>
<hr>
<p> 华丽的分割线。。。。。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>留空</p>
<hr>
<p> 华丽的分割线。。。。。</p>
]]>
    </summary>
    
      <category term="linux" scheme="http://needpp.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[天猫移动推荐竞赛s1]]></title>
    <link href="http://needpp.com/2015/05/15/%E5%A4%A9%E7%8C%AB%E7%A7%BB%E5%8A%A8%E6%8E%A8%E8%8D%90%E7%AB%9E%E8%B5%9Bs1/"/>
    <id>http://needpp.com/2015/05/15/天猫移动推荐竞赛s1/</id>
    <published>2015-05-14T16:00:00.000Z</published>
    <updated>2015-06-26T05:04:19.860Z</updated>
    <content type="html"><![CDATA[<h3 id="create_table">create table</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">create <span class="tag">table</span> t(</span><br><span class="line">uid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">iid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">type int ,</span><br><span class="line">ugeo <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">10</span>)</span></span>,</span><br><span class="line">icg <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line"><span class="tag">time</span> date</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">create <span class="tag">table</span> item(</span><br><span class="line">iid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">igeo <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">10</span>)</span></span>,</span><br><span class="line">icg <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="load_data">load data</h3><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">mysql -<span class="keyword">u</span> root -p tianchi2 --<span class="keyword">local</span>-<span class="keyword">infile</span>=1 -<span class="keyword">e</span> 'load data <span class="keyword">local</span> <span class="keyword">infile</span> <span class="string">"/home/spark/data/ali/user.csv"</span> into <span class="keyword">table</span> user fields terminated <span class="keyword">by</span> <span class="string">","</span> lines terminated <span class="keyword">by</span> <span class="string">"\n"</span>'</span><br><span class="line"> </span><br><span class="line">mysql -<span class="keyword">u</span> root -p tianchi2 --<span class="keyword">local</span>-<span class="keyword">infile</span>=1 -<span class="keyword">e</span> 'load data <span class="keyword">local</span> <span class="keyword">infile</span> <span class="string">"/home/spark/data/ali/item.csv"</span> into <span class="keyword">table</span> item fields terminated <span class="keyword">by</span> <span class="string">","</span> lines terminated <span class="keyword">by</span> <span class="string">"\n"</span>'</span><br></pre></td></tr></table></figure>
<h3 id="bulid_train_set_and_test_set">bulid train set and test set</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">table</span> train(</span><br><span class="line">uid <span class="built_in">varchar</span>(<span class="number">15</span>),</span><br><span class="line">iid <span class="built_in">varchar</span>(<span class="number">15</span>),</span><br><span class="line">type <span class="built_in">int</span> ,</span><br><span class="line">ugeo <span class="built_in">varchar</span>(<span class="number">10</span>),</span><br><span class="line">icg <span class="built_in">varchar</span>(<span class="number">15</span>),</span><br><span class="line"><span class="keyword">time</span> <span class="built_in">date</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> train <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">time</span> &gt;<span class="string">'2014-12-12'</span> <span class="keyword">and</span> <span class="keyword">time</span> &lt; <span class="string">'2014-12-18'</span> ;</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">table</span> test(</span><br><span class="line">uid <span class="built_in">varchar</span>(<span class="number">15</span>),</span><br><span class="line">iid <span class="built_in">varchar</span>(<span class="number">15</span>),</span><br><span class="line">type <span class="built_in">int</span> ,</span><br><span class="line">ugeo <span class="built_in">varchar</span>(<span class="number">10</span>),</span><br><span class="line">icg <span class="built_in">varchar</span>(<span class="number">15</span>),</span><br><span class="line"><span class="keyword">time</span> <span class="built_in">date</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">time</span> =<span class="string">'2014-12-18'</span> ;</span></span><br></pre></td></tr></table></figure>
<h3 id="统计点击_收藏_购物车_购买次数">统计点击 收藏 购物车 购买次数</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#gen train <span class="operator"><span class="keyword">set</span></span><br><span class="line"><span class="keyword">select</span> uid,iid,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">1</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) a , </span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) b ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">3</span> thencreate <span class="keyword">table</span> <span class="keyword">user</span>(</span><br><span class="line">uid <span class="built_in">varchar</span>(<span class="number">15</span>),</span><br><span class="line">iid <span class="built_in">varchar</span>(<span class="number">15</span>),</span><br><span class="line">type <span class="built_in">int</span> ,</span><br><span class="line">ugeo <span class="built_in">varchar</span>(<span class="number">10</span>),</span><br><span class="line">icg <span class="built_in">varchar</span>(<span class="number">15</span>),</span><br><span class="line"><span class="keyword">time</span> <span class="built_in">date</span></span><br><span class="line">) <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) c ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) d ,</span><br><span class="line"><span class="keyword">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) e</span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/train.csv'</span> </span><br><span class="line"><span class="keyword">from</span> train <span class="keyword">group</span> <span class="keyword">by</span> uid,iid </span><br><span class="line"></span><br><span class="line">#gen validate <span class="keyword">set</span></span><br><span class="line"><span class="keyword">select</span> uid,iid,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">1</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) a , </span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) b ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">3</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) c ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) d ,</span><br><span class="line"><span class="keyword">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) e</span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/test.csv'</span> </span><br><span class="line"><span class="keyword">from</span> test <span class="keyword">group</span> <span class="keyword">by</span> uid,iid </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##gen user_item pair <span class="keyword">to</span> predict <span class="keyword">and</span> <span class="keyword">then</span> submit <span class="keyword">to</span> the website <span class="keyword">to</span> test</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> uid,iid,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">1</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) a , </span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) b ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">3</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) c ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) d </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/pre_submit.txt'</span> </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">time</span>&gt;=<span class="string">'2014-12-15'</span> <span class="keyword">and</span> <span class="keyword">time</span>&lt;<span class="string">'2014-12-18'</span> <span class="keyword">group</span> <span class="keyword">by</span> uid,iid</span></span><br></pre></td></tr></table></figure>
<h3 id="new_way">new way</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">##bulid train <span class="operator"><span class="keyword">set</span> <span class="keyword">from</span> <span class="number">13</span>-<span class="number">17</span> days</span><br><span class="line"><span class="keyword">select</span> uid,iid,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">1</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) a , </span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) b ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">3</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) c ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) d ,</span><br><span class="line"><span class="keyword">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) e</span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/train.txt'</span> </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">time</span>&gt;=<span class="string">'2014-12-13'</span> <span class="keyword">and</span> <span class="keyword">time</span>&lt;=<span class="string">'2014-12-17'</span> <span class="keyword">group</span> <span class="keyword">by</span> uid,iid ;</span></span><br><span class="line"></span><br><span class="line">##build test <span class="operator"><span class="keyword">set</span> <span class="keyword">from</span> <span class="number">18</span></span><br><span class="line"><span class="keyword">select</span> uid,iid,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">1</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) a , </span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) b ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">3</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) c ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) d ,</span><br><span class="line"><span class="keyword">max</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) e</span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/test.txt'</span> </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">time</span>=<span class="string">'2014-12-18'</span> <span class="keyword">group</span> <span class="keyword">by</span> uid,iid ;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">create <span class="tag">table</span> t(</span><br><span class="line">uid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">iid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line"><span class="tag">a</span> int,</span><br><span class="line"><span class="tag">b</span> int,</span><br><span class="line">c int,</span><br><span class="line">d int,</span><br><span class="line">e int</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">mysql -u root -<span class="tag">p</span> tianchi --lcreate <span class="tag">table</span> user(</span><br><span class="line">uid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">iid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">type int ,</span><br><span class="line">ugeo <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">10</span>)</span></span>,</span><br><span class="line">icg <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line"><span class="tag">time</span> date</span><br><span class="line">)ocal-infile=<span class="number">1</span> -e <span class="string">'load data local infile "/home/spark/user_item_togen.txt" into table t fields terminated by "\t" lines terminated by "\n"'</span></span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">select</span> uid,iid,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">1</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) a , </span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) b ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">3</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) c ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> type=<span class="number">4</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) d </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/group.txt'</span> </span><br><span class="line"><span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">group</span> <span class="keyword">by</span> uid,iid ;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">create <span class="tag">table</span> tem(</span><br><span class="line">uid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">iid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">type int ,</span><br><span class="line">ugeo <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">10</span>)</span></span>,</span><br><span class="line">icg <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line"><span class="tag">time</span> date</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql -u root -<span class="tag">p</span> tianchi --local-infile=<span class="number">1</span> -e <span class="string">'load data local infile "/home/spark/result.txt" into table tem fields terminated by "\t" lines terminated by "\n"'</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="create_table">create table</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">create <span class="tag">table</span> t(</span><br><span class="line">uid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">iid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">type int ,</span><br><span class="line">ugeo <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">10</span>)</span></span>,</span><br><span class="line">icg <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line"><span class="tag">time</span> date</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">create <span class="tag">table</span> item(</span><br><span class="line">iid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">igeo <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">10</span>)</span></span>,</span><br><span class="line">icg <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="dm" scheme="http://needpp.com/tags/dm/"/>
    
      <category term="tmall" scheme="http://needpp.com/tags/tmall/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[IJCAI2015重复购买用户预测]]></title>
    <link href="http://needpp.com/2015/04/30/IJCAI2015%E9%87%8D%E5%A4%8D%E8%B4%AD%E4%B9%B0%E7%94%A8%E6%88%B7%E9%A2%84%E6%B5%8B/"/>
    <id>http://needpp.com/2015/04/30/IJCAI2015重复购买用户预测/</id>
    <published>2015-04-29T16:00:00.000Z</published>
    <updated>2015-06-26T03:58:19.548Z</updated>
    <content type="html"><![CDATA[<h3 id="create_table">create table</h3><p>首先创建一个数据库表<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">#字段含义分别为 用户id 商品id 类别id 卖家id 品牌id 时间 操作行为</span><br><span class="line">create <span class="tag">table</span> big(</span><br><span class="line">uid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">iid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">cid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span> ,</span><br><span class="line">sid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">bid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line"><span class="tag">time</span> int,</span><br><span class="line">action tinyint</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="id">#create</span> index on field `aciton` ...</span><br><span class="line">create index  index_action on <span class="function"><span class="title">big</span><span class="params">(action)</span></span></span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h3 id="load_data">load data</h3><p>导入数据到数据库，这部分可以不用细看<br><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">mysql -<span class="keyword">u</span> root -p tianchi2 --<span class="keyword">local</span>-<span class="keyword">infile</span>=1 -<span class="keyword">e</span> 'load data <span class="keyword">local</span> <span class="keyword">infile</span> <span class="string">"/home/spark/data/ali/user.csv"</span> into <span class="keyword">table</span> user fields terminated <span class="keyword">by</span> <span class="string">","</span> lines terminated <span class="keyword">by</span> <span class="string">"\n"</span>'</span><br><span class="line"> </span><br><span class="line">mysql -<span class="keyword">u</span> root -p bigdata --<span class="keyword">local</span>-<span class="keyword">infile</span>=1 -<span class="keyword">e</span> 'load data <span class="keyword">local</span> <span class="keyword">infile</span> <span class="string">"/home/spark/data/2015/data_format1/user_log_format1.csv"</span> into <span class="keyword">table</span> big fields terminated <span class="keyword">by</span> <span class="string">","</span> lines terminated <span class="keyword">by</span> <span class="string">"\n"</span>'</span><br></pre></td></tr></table></figure></p>
<h3 id="choose_data">choose data</h3><p>当前的工作主要是从数据库中进行分组查询 等到一些统计的特征进行分析，用到一些group by  ,sum,等操作。可以先了解一下是怎么个过程，具体使用可以先搁置在一边，现在主要是理解我做了写什么事情。理清整个脉络。<br><figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line"><span class="comment">####数据格式，数据库里面的数据就是下面的这种形式 这是个示例</span></span><br><span class="line">mysql&gt; select <span class="keyword">*</span> from big limit 10;</span><br><span class="line">+--------+---------+------+------+------+------+--------+</span><br><span class="line">|<span class="string"> uid    </span>|<span class="string"> iid     </span>|<span class="string"> cid  </span>|<span class="string"> sid  </span>|<span class="string"> bid  </span>|<span class="string"> time </span>|<span class="string"> action </span>|</span><br><span class="line">+--------+---------+------+------+------+------+--------+</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 323294  </span>|<span class="string"> 833  </span>|<span class="string"> 2882 </span>|<span class="string"> 2661 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 844400  </span>|<span class="string"> 1271 </span>|<span class="string"> 2882 </span>|<span class="string"> 2661 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 575153  </span>|<span class="string"> 1271 </span>|<span class="string"> 2882 </span>|<span class="string"> 2661 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 996875  </span>|<span class="string"> 1271 </span>|<span class="string"> 2882 </span>|<span class="string"> 2661 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 1086186 </span>|<span class="string"> 1271 </span>|<span class="string"> 1253 </span>|<span class="string"> 1049 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 623866  </span>|<span class="string"> 1271 </span>|<span class="string"> 2882 </span>|<span class="string"> 2661 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 542871  </span>|<span class="string"> 1467 </span>|<span class="string"> 2882 </span>|<span class="string"> 2661 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 536347  </span>|<span class="string"> 1095 </span>|<span class="string"> 883  </span>|<span class="string"> 1647 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 364513  </span>|<span class="string"> 1271 </span>|<span class="string"> 2882 </span>|<span class="string"> 2661 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">|<span class="string"> 328862 </span>|<span class="string"> 575153  </span>|<span class="string"> 1271 </span>|<span class="string"> 2882 </span>|<span class="string"> 2661 </span>|<span class="string">  829 </span>|<span class="string">      0 </span>|</span><br><span class="line">+--------+---------+------+------+------+------+--------+</span><br></pre></td></tr></table></figure></p>
<p>1、统计用户对卖家点击、收藏、购物车、购买次数<br><code>注意，这里action行为字段的含义是0-点击，3-收藏，1-购物车、2-购买。下面也是如此。</code><br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#用户对卖家点击、收藏、购物车、购买次数</span><br><span class="line"><span class="operator"><span class="keyword">select</span> uid,sid,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">0</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) a , </span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">3</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) b ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">1</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) c ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) d </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/uid-sid.csv'</span>  <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">","</span> </span><br><span class="line"><span class="keyword">from</span> big <span class="keyword">group</span> <span class="keyword">by</span> uid,sid ;</span></span><br></pre></td></tr></table></figure></p>
<p>2、统计用户历史期间所有点击、收藏、购物车、购买次数<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#用户历史期间所有点击、收藏、购物车、购买次数</span><br><span class="line"><span class="operator"><span class="keyword">select</span> uid,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">0</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) a , </span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">3</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) b ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">1</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) c ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) d </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/uid.csv'</span>  <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">","</span> </span><br><span class="line"><span class="keyword">from</span> big <span class="keyword">group</span> <span class="keyword">by</span> uid;</span></span><br></pre></td></tr></table></figure></p>
<p>3、统计卖家历史期间店内商品被点击、收藏、购物车、购买次数<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">##卖家历史期间店内商品被点击、收藏、购物车、购买次数</span><br><span class="line"><span class="operator"><span class="keyword">select</span> sid,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">0</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) a , </span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">3</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) b ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">1</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) c ,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> <span class="keyword">action</span>=<span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) d </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/sid.csv'</span>  <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">","</span> </span><br><span class="line"><span class="keyword">from</span> big <span class="keyword">group</span> <span class="keyword">by</span> sid ;</span></span><br></pre></td></tr></table></figure></p>
<p>4、这里本来是想统计用户在某个店内对某个品牌的操作次数与在所有店内某个品牌操作次数的比值。sql不能一次完成 所以导出数据在python里面自己处理。这里对应是添加了两个统计特征 cid-pro和bid-pro<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#六个月内用户对品牌的操作次数</span><br><span class="line"><span class="operator"><span class="keyword">select</span> uid,bid,<span class="keyword">count</span>(*) </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/uid-bid.csv'</span>  <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">","</span> </span><br><span class="line"><span class="keyword">from</span> big <span class="keyword">group</span> <span class="keyword">by</span> uid,bid ;</span> </span><br><span class="line"></span><br><span class="line">#六个月内用户对某一个具体卖家中 所有品牌的操作次数</span><br><span class="line"><span class="operator"><span class="keyword">select</span> uid,sid,bid,<span class="keyword">count</span>(*) </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/uid-sid-bid.csv'</span>  <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">","</span> </span><br><span class="line"><span class="keyword">from</span> big <span class="keyword">group</span> <span class="keyword">by</span> uid,sid,bid ;</span> </span><br><span class="line"></span><br><span class="line">#六个月内用户对类别的操作次数</span><br><span class="line"><span class="operator"><span class="keyword">select</span> uid,cid,<span class="keyword">count</span>(*) </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/uid-cid.csv'</span>  <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">","</span> </span><br><span class="line"><span class="keyword">from</span> big <span class="keyword">group</span> <span class="keyword">by</span> uid,cid ;</span> </span><br><span class="line"></span><br><span class="line">#六个月内用户对某一个具体卖家中 类别的操作次数</span><br><span class="line"><span class="operator"><span class="keyword">select</span> uid,sid,cid,<span class="keyword">count</span>(*) </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/uid-sid-cid.csv'</span>  <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">","</span> </span><br><span class="line"><span class="keyword">from</span> big <span class="keyword">group</span> <span class="keyword">by</span> uid,sid,cid ;</span></span><br></pre></td></tr></table></figure></p>
<p>这部分代码可以先不用看 你知道有cid-pro、pid-pro就可以了<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">uid_sid_cid=pd.read_csv(<span class="string">"/home/spark/data/2015/data_format1/uid-sid-cid.csv"</span>,names=[<span class="string">'user_id'</span>,<span class="string">'merchant_id'</span>,<span class="string">'cid'</span>,<span class="string">'uid-sid-cid'</span>])</span><br><span class="line">uid_cid=pd.read_csv(<span class="string">"/home/spark/data/2015/data_format1/uid-cid.csv"</span>,names=[<span class="string">'user_id'</span>,<span class="string">'cid'</span>,<span class="string">'uid-cid'</span>])</span><br><span class="line">result=pd.merge(uid_sid_cid,uid_cid,on=[<span class="string">'user_id'</span>,<span class="string">'cid'</span>])</span><br><span class="line">result[<span class="string">'cid-pro'</span>]=result[<span class="string">'uid-sid-cid'</span>]/result[<span class="string">'uid-cid'</span>]</span><br><span class="line">result[[<span class="string">'user_id'</span>,<span class="string">'merchant_id'</span>,<span class="string">'cid-pro'</span>]].to_csv(<span class="string">"/home/spark/data/2015/data_format1/cid-pro.csv"</span>,index=<span class="keyword">False</span>)</span><br><span class="line"><span class="comment">#testreuslt.to_csv("/home/spark/data/2015/data_format1/test505.csv",index=False)</span></span><br><span class="line"></span><br><span class="line">uid_sid_bid=pd.read_csv(<span class="string">"/home/spark/data/2015/data_format1/uid-sid-bid.csv"</span>,names=[<span class="string">'user_id'</span>,<span class="string">'merchant_id'</span>,<span class="string">'bid'</span>,<span class="string">'uid-sid-bid'</span>])</span><br><span class="line">uid_bid=pd.read_csv(<span class="string">"/home/spark/data/2015/data_format1/uid-bid.csv"</span>,names=[<span class="string">'user_id'</span>,<span class="string">'bid'</span>,<span class="string">'uid-bid'</span>])</span><br><span class="line">result=pd.merge(uid_sid_bid,uid_bid,on=[<span class="string">'user_id'</span>,<span class="string">'bid'</span>])</span><br><span class="line">result[<span class="string">'bid-pro'</span>]=result[<span class="string">'uid-sid-bid'</span>]/result[<span class="string">'uid-bid'</span>]</span><br><span class="line">result[[<span class="string">'user_id'</span>,<span class="string">'merchant_id'</span>,<span class="string">'bid-pro'</span>]].to_csv(<span class="string">"/home/spark/data/2015/data_format1/bid-pro.csv"</span>,index=<span class="keyword">False</span>)</span><br><span class="line"><span class="comment">#testreuslt.to_csv("/home/spark/data/2015/data_format1/test505.csv",index=False)</span></span><br></pre></td></tr></table></figure></p>
<p>5、添加性别和年龄（从文本里面完成 没有用到数据库操作，这里不在描述过程）</p>
<hr>
<p>6、这个部分现在还没有添加。。。是准备要添加的属性。。。<br><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#重复购买次数</span><br><span class="line">spark@spark-desktop:~/data/2015/data_format1$ head -n 100 uid-sid.csv</span><br><span class="line">user_id,merchant_id,a,b,c,d</span><br><span class="line">1,1019,10,0,0,4</span><br><span class="line">1,1156,1,0,0,0</span><br><span class="line">1,2245,5,0,0,0</span><br><span class="line">1,4026,4,0,0,1</span><br><span class="line">1,4177,1,0,0,0</span><br><span class="line">1,4335,1,0,0,0</span><br><span class="line">1,471,1,0,0,0</span><br><span class="line">1,739,1,0,0,0</span><br><span class="line">1,925,3,0,0,1</span><br><span class="line">10,1364,13,1,0,5</span><br><span class="line">10,1454,9,0,0,0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">select</span> uid,iid,<span class="keyword">count</span>(*) </span><br><span class="line"><span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/tmp/uid-iid-count.csv'</span>  <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">","</span> </span><br><span class="line"><span class="keyword">from</span> big <span class="keyword">where</span> <span class="keyword">action</span>=<span class="number">2</span> <span class="keyword">group</span> <span class="keyword">by</span> uid,iid ;</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">d为用户在卖家店内过去购买商品的总次数   衡量重复购买次数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#重复购买时间间隔</span><br></pre></td></tr></table></figure></p>
<h3 id="现在具有的属性（train06-csv）">现在具有的属性（train06.csv）</h3><p><code>注意：前两列没有作为属性，最后一列为类别标签</code><br><figure class="highlight dns"><table><tr><td class="code"><pre><span class="line">user_id,merchant_id,a,b,c,d,u1,u2,u3,u4,s1,s2,s3,s4,age_range,gender,cid-pro,bid-pro,label</span><br><span class="line"><span class="number">34176,3906</span>,<span class="number">36,2,0,1</span>,<span class="number">410,7,0</span>,<span class="number">34,14870,96</span><span class="number">1,28,410</span>,<span class="number">6.0,0.0</span>,<span class="number">0.30499243</span><span class="number">304121354,1</span>.0,0</span><br><span class="line"></span><br><span class="line"><span class="number">34176,121,13</span>,<span class="number">0,0,1,41</span><span class="number">0,7,0,34</span>,<span class="number">72265,2699</span>,<span class="number">121,4780,6</span>.<span class="number">0,0.0,1</span>.<span class="number">0,1.0,0</span></span><br><span class="line"></span><br><span class="line"><span class="number">34176,4356</span>,<span class="number">12,0,0,6</span>,<span class="number">410,7,0</span>,<span class="number">34,6094,196</span>,<span class="number">16,963,6</span>.<span class="number">0,0.0,0</span>.<span class="number">81818181818181</span><span class="number">82,0.78260</span><span class="number">86956521741</span>,1</span><br></pre></td></tr></table></figure></p>
<h3 id="links">links</h3><p><a href="https://dato.com/learn/userguide/" target="_blank" rel="external">https://dato.com/learn/userguide/</a></p>
<h4 id="语法使用">语法使用</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#重命名列名字</span></span><br><span class="line">t.rename(columns=&#123;<span class="string">'class'</span>:<span class="string">'label'</span>&#125;,inplace=<span class="keyword">True</span>)</span><br><span class="line"><span class="comment">#shuffle</span></span><br><span class="line">index2=np.arange(len(t))</span><br><span class="line">np.random.shuffle(index2)</span><br><span class="line">t.reindex(index=index2)</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="create_table">create table</h3><p>首先创建一个数据库表<br><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">#字段含义分别为 用户id 商品id 类别id 卖家id 品牌id 时间 操作行为</span><br><span class="line">create <span class="tag">table</span> big(</span><br><span class="line">uid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">iid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">cid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span> ,</span><br><span class="line">sid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">bid <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line"><span class="tag">time</span> int,</span><br><span class="line">action tinyint</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="id">#create</span> index on field `aciton` ...</span><br><span class="line">create index  index_action on <span class="function"><span class="title">big</span><span class="params">(action)</span></span></span><br></pre></td></tr></table></figure></p>]]>
    
    </summary>
    
      <category term="ijcai" scheme="http://needpp.com/tags/ijcai/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[pandas数据操作]]></title>
    <link href="http://needpp.com/2015/04/27/pandas%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C/"/>
    <id>http://needpp.com/2015/04/27/pandas数据操作/</id>
    <published>2015-04-26T16:00:00.000Z</published>
    <updated>2015-06-26T04:00:42.776Z</updated>
    <content type="html"><![CDATA[<h2 id="Pandas_数据处理">Pandas 数据处理</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">imort pandas <span class="keyword">as</span> pd</span><br><span class="line">生成随机数</span><br><span class="line">s=np.random.randint (<span class="number">0</span>,<span class="number">15951</span>,<span class="number">5000</span>)</span><br><span class="line">讲dataframe的数据写入csv文件</span><br><span class="line">dtest.to_csv (<span class="string">"test.csv"</span>,index=<span class="keyword">False</span>)</span><br><span class="line">读取csv文件到dataframe</span><br><span class="line">test=pd.read_csv(<span class="string">"test_format1.csv"</span>)</span><br><span class="line">添加一列</span><br><span class="line">c[<span class="string">'lable'</span>]=e</span><br><span class="line">删除一列</span><br><span class="line">dtest=d.drop([<span class="string">'prob'</span>],axis=<span class="number">1</span>)</span><br><span class="line">join操作</span><br><span class="line">d=pd.merge (test,b,on=[<span class="string">'user_id'</span>,<span class="string">'merchant_id'</span>])</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="code">code</h3><figure class="highlight nix"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">import</span> pandas as pd</span><br><span class="line">from sklearn <span class="built_in">import</span> linear_model</span><br><span class="line">from sklearn <span class="built_in">import</span> cross_validation</span><br><span class="line"></span><br><span class="line">from sklearn.externals <span class="built_in">import</span> joblib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="variable">__name__=</span>=<span class="string">"__main__"</span>:</span><br><span class="line">    <span class="variable">data=</span>pd.read_csv(<span class="string">"/home/spark/data/2015/data_format1/train.csv"</span>)</span><br><span class="line">    <span class="comment">#test=np.loadtxt("/tmp/test.txt",delimiter="\t",dtype=np.int32)</span></span><br><span class="line">    <span class="variable">X=</span>data.iloc[:,<span class="number">0</span>:-<span class="number">1</span>]</span><br><span class="line">    <span class="variable">target=</span>data['lable']</span><br><span class="line">    </span><br><span class="line">    <span class="variable">test=</span>pd.read_csv(<span class="string">"/home/spark/data/2015/data_format1/test.csv"</span>)</span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">    X_train,X_test,y_train,<span class="variable">y_test=</span>cross_validation.train_test_split(X,target,<span class="variable">test_size=</span><span class="number">0.1</span>,<span class="variable">random_state=</span><span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    print(<span class="string">"begin fit the model...."</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="variable">clf=</span>linear_model.LogisticRegression(<span class="variable">penalty=</span>'l2', <span class="variable">dual=</span>False, <span class="variable">tol=</span><span class="number">0.0001</span>, <span class="variable">C=</span><span class="number">1.0</span>, <span class="variable">fit_intercept=</span>True, <span class="variable">intercept_scaling=</span><span class="number">1</span>, <span class="variable">class_weight=</span>None, <span class="variable">random_state=</span>None)</span><br><span class="line">    clf.fit(X,target)</span><br><span class="line">    </span><br><span class="line">    print(<span class="string">"the model have train success, we will save the model to file..."</span>)</span><br><span class="line"></span><br><span class="line">    <span class="variable">p=</span>clf.predict_proba(test)</span><br><span class="line">    </span><br><span class="line">    <span class="variable">reslut=</span>test.drop(['a','b','c','d'],<span class="variable">axis=</span><span class="number">1</span>)</span><br><span class="line">    reslut['prob']=p[:,<span class="number">1</span>]</span><br><span class="line">    </span><br><span class="line">    reslut.to_csv(<span class="string">"/home/spark/data/2015/data_format1/predict.csv"</span>,<span class="variable">index=</span>False)</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Pandas_数据处理">Pandas 数据处理</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">imort pandas <span class="keyword">as</span> pd</span><br><span class="line">生成随机数</span><br><span class="line">s=np.random.randint (<span class="number">0</span>,<span class="number">15951</span>,<span class="number">5000</span>)</span><br><span class="line">讲dataframe的数据写入csv文件</span><br><span class="line">dtest.to_csv (<span class="string">"test.csv"</span>,index=<span class="keyword">False</span>)</span><br><span class="line">读取csv文件到dataframe</span><br><span class="line">test=pd.read_csv(<span class="string">"test_format1.csv"</span>)</span><br><span class="line">添加一列</span><br><span class="line">c[<span class="string">'lable'</span>]=e</span><br><span class="line">删除一列</span><br><span class="line">dtest=d.drop([<span class="string">'prob'</span>],axis=<span class="number">1</span>)</span><br><span class="line">join操作</span><br><span class="line">d=pd.merge (test,b,on=[<span class="string">'user_id'</span>,<span class="string">'merchant_id'</span>])</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="pandas" scheme="http://needpp.com/tags/pandas/"/>
    
      <category term="python" scheme="http://needpp.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Q命令在csv和tsv上使用sql语句]]></title>
    <link href="http://needpp.com/2015/04/22/Q%E5%91%BD%E4%BB%A4%E5%9C%A8csv%E5%92%8Ctsv%E4%B8%8A%E4%BD%BF%E7%94%A8sql%E8%AF%AD%E5%8F%A5/"/>
    <id>http://needpp.com/2015/04/22/Q命令在csv和tsv上使用sql语句/</id>
    <published>2015-04-21T16:00:00.000Z</published>
    <updated>2015-06-25T01:10:06.788Z</updated>
    <content type="html"><![CDATA[<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">q allows performing SQL-like statements <span class="command"><span class="keyword">on</span> <span class="title">tabular</span> <span class="title">text</span> <span class="title">data</span>. <span class="title">Its</span> <span class="title">purpose</span> <span class="title">is</span> <span class="title">to</span> <span class="title">bring</span> <span class="title">SQL</span> <span class="title">expressive</span> <span class="title">power</span> <span class="title">to</span> <span class="title">the</span> <span class="title">Linux</span> <span class="title">command</span> <span class="title">line</span> <span class="title">and</span> <span class="title">to</span> <span class="title">provide</span> <span class="title">easy</span> <span class="title">access</span> <span class="title">to</span> <span class="title">text</span> <span class="title">as</span> <span class="title">actual</span> <span class="title">data</span>.</span></span><br><span class="line"></span><br><span class="line">Query should be <span class="operator">an</span> SQL-like query which <span class="operator">contains</span> filenames instead <span class="operator">of</span> table names (<span class="operator">or</span> - <span class="keyword">for</span> <span class="keyword">stdin</span>). The query itself should be provided <span class="keyword">as</span> <span class="constant">one</span> parameter <span class="built_in">to</span> <span class="operator">the</span> tool (i.e. enclosed <span class="operator">in</span> quotes).</span><br><span class="line"></span><br><span class="line">Use -H <span class="built_in">to</span> signify that <span class="operator">the</span> input <span class="operator">contains</span> <span class="operator">a</span> header <span class="built_in">line</span>. Column names will be detected automatically <span class="operator">in</span> that <span class="keyword">case</span>, <span class="operator">and</span> can be used <span class="operator">in</span> <span class="operator">the</span> query. If this option is <span class="operator">not</span> provided, columns will be named cX, starting <span class="operator">with</span> <span class="number">1</span> (e.g. q <span class="string">"SELECT c3,c8 from ..."</span>).</span><br><span class="line"></span><br><span class="line">Use -d <span class="built_in">to</span> specify <span class="operator">the</span> input delimiter.</span><br><span class="line"></span><br><span class="line">Column types are auto detected <span class="keyword">by</span> <span class="operator">the</span> tool, no casting is needed.</span><br><span class="line"></span><br><span class="line">Please note that column names that <span class="built_in">include</span> spaces need <span class="built_in">to</span> be used <span class="operator">in</span> <span class="operator">the</span> query <span class="operator">with</span> back-<span class="built_in">ticks</span>, <span class="keyword">as</span> per <span class="operator">the</span> sqlite standard.</span><br><span class="line"></span><br><span class="line">Query/Input/Output encodings are fully supported (<span class="operator">and</span> q tries <span class="built_in">to</span> provide out-<span class="operator">of</span>-<span class="operator">the</span>-box usability <span class="operator">in</span> that area). Please use -e,-E <span class="operator">and</span> -Q <span class="built_in">to</span> control encoding <span class="keyword">if</span> needed.</span><br><span class="line"></span><br><span class="line">All sqlite3 SQL constructs are supported, including joins across <span class="built_in">files</span> (use <span class="operator">an</span> <span class="built_in">alias</span> <span class="keyword">for</span> <span class="keyword">each</span> table).</span><br><span class="line">See <span class="keyword">https</span>://github.com/harelba/q <span class="keyword">for</span> more details.</span><br></pre></td></tr></table></figure>
<p>i.csv 文件<br><figure class="highlight autohotkey"><table><tr><td class="code"><pre><span class="line">item_id,item_geohash,item_category</span><br><span class="line"><span class="number">312051294</span>,,<span class="number">8270</span></span><br><span class="line"><span class="number">99999754</span>,,<span class="number">7393</span></span><br><span class="line"><span class="number">131746128</span>,,<span class="number">7876</span></span><br><span class="line"><span class="number">385731330</span>,,<span class="number">10544</span></span><br><span class="line"><span class="number">100004415</span>,,<span class="number">3064</span></span><br><span class="line"><span class="number">76588345</span>,<span class="number">95</span>qqvei,<span class="number">5411</span></span><br><span class="line"><span class="number">312053799</span>,,<span class="number">13547</span></span><br><span class="line"><span class="number">100004955</span>,,<span class="number">7033</span></span><br><span class="line"><span class="number">312322681</span>,,<span class="number">8376</span></span><br></pre></td></tr></table></figure></p>
<figure class="highlight autohotkey"><table><tr><td class="code"><pre><span class="line">cat i.csv | q -H -d ',' <span class="string">"select * from -"</span></span><br><span class="line"></span><br><span class="line"><span class="number">312051294</span>,,<span class="number">8270</span></span><br><span class="line"><span class="number">99999754</span>,,<span class="number">7393</span></span><br><span class="line"><span class="number">131746128</span>,,<span class="number">7876</span></span><br><span class="line"><span class="number">385731330</span>,,<span class="number">10544</span></span><br><span class="line"><span class="number">100004415</span>,,<span class="number">3064</span></span><br><span class="line"><span class="number">76588345</span>,<span class="number">95</span>qqvei,<span class="number">5411</span></span><br><span class="line"><span class="number">312053799</span>,,<span class="number">13547</span></span><br><span class="line"><span class="number">100004955</span>,,<span class="number">7033</span></span><br><span class="line"><span class="number">312322681</span>,,<span class="number">8376</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">q allows performing SQL-like statements <span c]]>
    </summary>
    
      <category term="q" scheme="http://needpp.com/tags/q/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[spark car]]></title>
    <link href="http://needpp.com/2015/04/08/spark%20car/"/>
    <id>http://needpp.com/2015/04/08/spark car/</id>
    <published>2015-04-07T16:00:00.000Z</published>
    <updated>2015-06-25T01:10:06.788Z</updated>
    <content type="html"><![CDATA[<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">bin<span class="regexp">/spark-submit --class CarCheck --master yarn-client  /</span>home<span class="regexp">/spark/</span>temp<span class="regexp">/lib/</span>SparkExample.jar  <span class="string">hdfs:</span><span class="comment">//master:9000/t/newfile hdfs://master:9000/t/output2</span></span><br></pre></td></tr></table></figure>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by spark on 15-3-18.</span><br><span class="line"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.<span class="type">SimpleDateFormat</span></span><br><span class="line"><span class="keyword">import</span> scala.util.control.<span class="type">Breaks</span>._</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.&#123;<span class="type">SparkConf</span>, <span class="type">SparkContext</span>&#125;</span><br><span class="line"><span class="keyword">import</span> org.apache.spark.<span class="type">SparkContext</span>._</span><br><span class="line"><span class="comment">/** Computes an approximation to pi */</span></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">CarCheck</span> &#123;</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span>(</span>args: <span class="type">Array</span>[<span class="type">String</span>]) &#123;</span><br><span class="line">    <span class="keyword">if</span>(args.length!=<span class="number">2</span>)&#123;</span><br><span class="line">      <span class="type">System</span>.err.println(<span class="string">"Usage : SparkDemo &lt;input file&gt; &lt;output file &gt;"</span>)</span><br><span class="line">      <span class="type">System</span>.exit(<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">val</span> <span class="title">conf</span> =</span> <span class="keyword">new</span> <span class="type">SparkConf</span>().setMaster(<span class="string">"local"</span>).setAppName(<span class="string">"cardata"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">val</span> <span class="title">spark</span> =</span> <span class="keyword">new</span> <span class="type">SparkContext</span>(conf)</span><br><span class="line"></span><br><span class="line"><span class="comment">//    val file=spark.textFile("/home/spark/data/cardata/cheliunorm.csv")</span></span><br><span class="line">    <span class="function"><span class="keyword">val</span> <span class="title">file=spark</span>.<span class="title">textFile</span>(</span>args(<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// such as (carnum,line) like m-v</span></span><br><span class="line">    <span class="function"><span class="keyword">val</span> <span class="title">cars=file</span>.<span class="title">map</span>(</span>line=&gt;&#123; <span class="function"><span class="keyword">val</span> <span class="title">fileds</span> =</span> line.split(<span class="string">","</span>)</span><br><span class="line">      (fileds(<span class="number">0</span>), line)&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">val</span> <span class="title">order=cars</span>.<span class="title">groupByKey</span>(</span>).map(data=&gt;&#123;</span><br><span class="line">      <span class="comment">//we can order by time , however the dateformat is not fit</span></span><br><span class="line">      <span class="comment">//repair it after coding it</span></span><br><span class="line">      <span class="function"><span class="keyword">val</span> <span class="title">sort=data</span>.<span class="title">_2</span>.<span class="title">toList</span>.<span class="title">sortWith</span>(</span>_ &lt; _)</span><br><span class="line">      (data._1,sort)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">val</span> <span class="title">sdf=new</span> <span class="title">SimpleDateFormat</span>(</span><span class="string">"yyyy-MM-dd HH:mm:ss"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">val</span> <span class="title">keyi=order</span>.<span class="title">map</span>(</span>data=&gt;&#123;</span><br><span class="line">      <span class="comment">//粤ELQ311,2013-10-8 13:16:21,卡口——兴达路贤和路口,43,2,1</span></span><br><span class="line">      <span class="function"><span class="keyword">val</span> <span class="title">list=data</span>.<span class="title">_2</span></span><br><span class="line"></span></span><br><span class="line">      <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">      <span class="keyword">var</span> flag=<span class="literal">true</span></span><br><span class="line">      <span class="function"><span class="keyword">val</span> <span class="title">distance=new</span> <span class="title">Distance</span></span><br><span class="line"></span>      <span class="keyword">while</span>(list.size &gt;<span class="number">3</span> &amp;&amp; i &lt; list.size-<span class="number">1</span> &amp;&amp; flag ) &#123;</span><br><span class="line">        <span class="comment">//粤ELQ311,2013/10/8 13:16:21,卡口——兴达路贤和路口,43,2,1,112.87741,23.17866,1</span></span><br><span class="line">        <span class="function"><span class="keyword">val</span> <span class="title">pre</span> =</span> list(i).split(<span class="string">","</span>)</span><br><span class="line">        <span class="function"><span class="keyword">val</span> <span class="title">cur</span> =</span> list(i + <span class="number">1</span>).split(<span class="string">","</span>)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">val</span> <span class="title">t1=pre</span>(</span><span class="number">1</span>)</span><br><span class="line">        <span class="function"><span class="keyword">val</span> <span class="title">lat1=pre</span>(</span><span class="number">7</span>).toDouble</span><br><span class="line">        <span class="function"><span class="keyword">val</span> <span class="title">lng1=pre</span>(</span><span class="number">6</span>).toDouble</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">val</span> <span class="title">t2=cur</span>(</span><span class="number">1</span>)</span><br><span class="line">        <span class="function"><span class="keyword">val</span> <span class="title">lat2=cur</span>(</span><span class="number">7</span>).toDouble</span><br><span class="line">        <span class="function"><span class="keyword">val</span> <span class="title">lng2=cur</span>(</span><span class="number">6</span>).toDouble</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">val</span> <span class="title">realtime</span> =</span> (sdf.parse(t2).getTime - sdf.parse(t1).getTime) / <span class="number">1000</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">val</span> <span class="title">dis=distance</span>.<span class="title">GetDistance</span>(</span>lat1,lng1,lat2,lng2)</span><br><span class="line"></span><br><span class="line"><span class="comment">//        println("dis=="+dis/33)</span></span><br><span class="line"><span class="comment">//        println("time=="+realtime)</span></span><br><span class="line">        <span class="keyword">if</span>(t1==t2)&#123;</span><br><span class="line">          i=i+<span class="number">1</span></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">if</span>(dis/<span class="number">100</span> &gt; realtime)&#123;</span><br><span class="line">            flag=<span class="literal">false</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        i=i+<span class="number">1</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// check the final result</span></span><br><span class="line">      <span class="keyword">if</span>(flag==<span class="literal">false</span>)&#123;</span><br><span class="line">        (data._1,<span class="string">"keyi"</span>,<span class="string">"cout"</span>,flag)</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        (data._1,<span class="string">"normal~~~~~~~~~~~~~~"</span>,list.size,flag)</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line">    <span class="function"><span class="keyword">val</span> <span class="title">result=keyi</span>.<span class="title">filter</span>(</span>x=&gt;x._2==<span class="string">"keyi"</span>)</span><br><span class="line"></span><br><span class="line">    result.collect().foreach(println)</span><br><span class="line"></span><br><span class="line">    result.saveAsTextFile(args(<span class="number">1</span>))</span><br><span class="line">    print(result.count())</span><br><span class="line">    spark.stop()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">bin<span class="regexp">/spark-submit --class CarCheck ]]>
    </summary>
    
      <category term="car" scheme="http://needpp.com/tags/car/"/>
    
      <category term="spark" scheme="http://needpp.com/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[关于博主]]></title>
    <link href="http://needpp.com/2015/03/25/Resume/"/>
    <id>http://needpp.com/2015/03/25/Resume/</id>
    <published>2015-03-24T16:00:00.000Z</published>
    <updated>2015-06-26T05:22:25.535Z</updated>
    <content type="html"><![CDATA[<h1 id="个人信息">个人信息</h1><ul>
<li>Thinkml/男/1990 </li>
<li>硕士/华南理工大学计算机</li>
<li>工作年限：在读</li>
<li>关于：本人积极乐观、待人诚恳、敢于担当。对于新鲜事物有着火一般的热情，喜欢尝试，乐于分享，热衷于学习新技术、新知识并通过写博客的方式进行记录学习过程中遇到的坑。有过良好的软件开发规范的指导经历,具有良好的团队合作能力及项目文档书写能力。对项目开发流程有着深刻理解，善于与他人沟通、积极进取,有强烈的责任心。</li>
</ul>
<h1 id="联系方式">联系方式</h1><ul>
<li>手机：15626239780</li>
<li>Email： dcycome@gmail.com</li>
<li>Blog :  <a href="http://me.needpp.com/" target="_blank" rel="external">http://me.needpp.com/</a></li>
</ul>
<h1 id="技能清单">技能清单</h1><ul>
<li>熟悉Java和J2EE开发，熟悉Struts/Hibernate/Spring/Mybatis等开源框架。</li>
<li>熟练使用Myeclipse、Visual Studio、SPSS、Weka等工具。</li>
<li>熟悉常用机器学习算法原理与应用场景以及统计学相关知识。</li>
<li>熟悉常用算法与数据结构。</li>
<li>熟练掌握Mysql、Sql Server操作，有过数据库优化经验。</li>
<li>熟悉Linux操作，掌握Shell编程熟悉TCP/IP协议相关知识。</li>
<li>了解C++、Python、R语言。</li>
<li>了解Hadoop、Spark分布式计算框架。</li>
<li>了解BootStrap、Ajax、JQuery等前端开发技术。</li>
<li>了解Git、Cvs等版本控制操作。</li>
</ul>
<a id="more"></a>
<h1 id="项目经历">项目经历</h1><h3 id="2015/4-2015/5_IJCAI-15竞赛_商家开展促销之后重复购买用户的预测">2015/4-2015/5  IJCAI-15竞赛  商家开展促销之后重复购买用户的预测</h3><ul>
<li>简述：为了吸引更多的买家来购买产品，商家们通常会在特殊节日比如“双11”开展大规模的打折或者发放购物券的促销活动。通常这样吸引过来的用户往往是一锤子买卖，没有过多的用户黏性。本次的任务就是希望通过过去六个月的用户行为数据来预测未来可能会在这个店家再次发生购买行为的用户，从而可以用来指导促销策略，有针对性的针对黏性用户开展促销策略活动，提升ROI。本次竞赛由天猫主办，提供了42w用户在“双11”前六个月的近5500w条商品行为记录。</li>
<li>职责：导入mysql数据库、清理数据、分析并提取特征。主要使用sql和pandas进行数据处理和特征的生成，使用scikit-learing和graphlab-create进行模型的构建。</li>
</ul>
<h3 id="2013/09-2013/11_基于Hadoop的电信用户交往圈构建及特定用户识别_|_3人|研发人员">2013/09-2013/11 基于Hadoop的电信用户交往圈构建及特定用户识别 | 3人|研发人员</h3><ul>
<li>简述：这个比赛主要任务就是根据电信研究院提供的用户通话记录、用户短信记录、    用户信息来判断该用户是否为学生，根据上述信息发现用户所在的短信圈子和通话圈子。</li>
<li>职责：1）特定用户识别任务：分析数据、提取特征，使用Mahout的RandomForest进行建模。2）交往圈子发现：构建用户短信网络、通话记录网络，实现基于Hadoop的社区发现算法（R方法）进行圈子发现。</li>
</ul>
<h3 id="2014/4-2014/7_关于网络异常问题的检测研究_|_5人_|_研发人员">2014/4-2014/7 关于网络异常问题的检测研究 | 5人 | 研发人员</h3><ul>
<li>简述： 传统的网络问题检测主要依据工程师相关经验，根据某些参数的异常区间来进行定位，识别出故障发生的大致原因。人力成本大而且效果也不是非常好。该项目    的目的是想通过统计机器学习的方式，从以往的故障原因以及样本数据中进行分析和学习，得到问题检测模型，然后通过这个模型来进行问题发生原因的定位。</li>
<li>职责：负责对问题的建模，分析与验证。处理不平衡样本数据，借助weka的学习库进行二次开发，完成对该问题的线上验证接口的编写。</li>
</ul>
<h3 id="2013/10_~_2014/9_基于hadoop平台的套牌车辆识别_|_5人_|_研发人员">2013/10 ~ 2014/9  基于hadoop平台的套牌车辆识别 | 5人 | 研发人员</h3><ul>
<li>描述：通过大量的车辆经过卡口的记录信息的分析，运用数据挖掘、统计分析、以及时间距离模型、图模型等方法从中提取出疑似套牌的车辆并把其反馈到公路局。</li>
<li>职责：对数据进行预处理，构建模型并通过在hadoop上编写MapReduce程序对模型结果进行验证与优化，选择合适模型进行数据分析处理。并且借助百度地理位置信息服务LBS完成对可疑车辆轨迹绘制的可视化操作。</li>
</ul>
<h3 id="2013/5~2013/6_基于mahout的电影推荐系统_|_6人_|_小组负责人">2013/5~2013/6  基于mahout的电影推荐系统 | 6人 | 小组负责人</h3><ul>
<li>简述：该项目是项目小组完成的信息检索课程的一个课程设计，整个系统采用MVC的模式进行分块。主要分为数据录入、生成推荐清单、结果导入mysql三个模块。其中推荐模块算法采用mahout的协同过滤算法进行加权重排名。</li>
<li>职责：主要负责整个系统的设计、任务的分配以及推荐模块算法的编写整合。</li>
</ul>
<h3 id="2013/03-2013/09黑龙江公路养护系统_|_8人_|_研发人员">2013/03-2013/09黑龙江公路养护系统 | 8人 | 研发人员</h3><ul>
<li>简述：该项目是黑龙江公路养护系统的一期项目，针对高速公路基本信息的维护，包含系统管理、隧道、涵道、绿化、桥梁、安检等信息的维护。系统采用 Spring、Mybatis和 Struct2 轻量级框架实现业务逻辑，使用 SQL Server 进行数据存储，通过 Ajax 异步方式对数据以 Json 格式进行交互。 </li>
<li>职责：主要负责隧道信息和桥梁信息的维护，与前端工程师协同完成数据的交互。</li>
</ul>
<h3 id="2012/09-2013/01锦原绩效考核信息管理系统_|_8人_|_研发人员">2012/09-2013/01锦原绩效考核信息管理系统 | 8人 | 研发人员</h3><ul>
<li>简述：绩效考核系统实现了便捷的对员工绩效进行考核评定，对锦原内部考核的考核方式进行抽象，该项目采用 B/S 架构，通过 Spring、Hibernate 和 Struct2 框架的结合简化系统部署难度.前端使用 ExtJs 与 Jsp 的结合能够获得良好的用户体验。</li>
<li>职责：完成系统架构搭建和基本信息的维护以及权限管理模块的编写。</li>
</ul>
<h1 id="开源项目和作品">开源项目和作品</h1><h2 id="开源项目">开源项目</h2><ul>
<li><a href="https://github.com/dcycome/MyStudy/tree/master/JsoupDemo" target="_blank" rel="external">新浪微博数据分析</a>    </li>
<li><a href="https://github.com/dcycome/MyStudy/tree/master/RecommenderMovie" target="_blank" rel="external">电影推荐系统</a> </li>
<li><a href="https://github.com/dcycome/MyStudy/tree/master/Hello-S" target="_blank" rel="external">人脸表情分析小应用</a></li>
</ul>
<h2 id="技术文章">技术文章</h2><ul>
<li><a href="http://lovefeiniu.sinaapp.com/post/41" target="_blank" rel="external">Machine Learing with OpenCV</a></li>
<li><a href="http://lovefeiniu.sinaapp.com/post/10" target="_blank" rel="external">Kdd99 dataset 分析</a></li>
<li><a href="http://lovefeiniu.sinaapp.com/post/3" target="_blank" rel="external">D3 学习笔记</a></li>
<li><a href="http://lovefeiniu.sinaapp.com/post/35" target="_blank" rel="external">Weka导出模型使用说明—网络数据分析</a></li>
<li><a href="http://lovefeiniu.sinaapp.com/post/2" target="_blank" rel="external">Android 学习笔记</a></li>
<li><a href="http://lovefeiniu.sinaapp.com/post/30" target="_blank" rel="external">关于套牌车数据分布式存储方案</a></li>
<li><a href="http://lovefeiniu.sinaapp.com/post/26" target="_blank" rel="external">南方电网用电时间序列分析</a></li>
<li><a href="http://lovefeiniu.sinaapp.com" target="_blank" rel="external">查看更多</a></li>
</ul>
<h1 id="技能清单-1">技能清单</h1><ul>
<li>分布式计算： Hadoop/Spark</li>
<li>数据挖掘： Weka/Mahout/Spss/MLib</li>
<li>数据处理： grep/sed/awk/python</li>
<li>Web框架：SSH</li>
<li>数据库相关：MySQL/Hbase/Hypertable/Redis</li>
<li>版本管理、文档和自动化部署工具：Svn/Git</li>
<li>云和开放平台：ACE/SAE/BAE/微博开放平台</li>
</ul>
<h1 id="致谢">致谢</h1><p>感谢您花时间阅读我的简历，期待能有机会和您共事。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="个人信息">个人信息</h1><ul>
<li>Thinkml/男/1990 </li>
<li>硕士/华南理工大学计算机</li>
<li>工作年限：在读</li>
<li>关于：本人积极乐观、待人诚恳、敢于担当。对于新鲜事物有着火一般的热情，喜欢尝试，乐于分享，热衷于学习新技术、新知识并通过写博客的方式进行记录学习过程中遇到的坑。有过良好的软件开发规范的指导经历,具有良好的团队合作能力及项目文档书写能力。对项目开发流程有着深刻理解，善于与他人沟通、积极进取,有强烈的责任心。</li>
</ul>
<h1 id="联系方式">联系方式</h1><ul>
<li>手机：15626239780</li>
<li>Email： dcycome@gmail.com</li>
<li>Blog :  <a href="http://me.needpp.com/">http://me.needpp.com/</a></li>
</ul>
<h1 id="技能清单">技能清单</h1><ul>
<li>熟悉Java和J2EE开发，熟悉Struts/Hibernate/Spring/Mybatis等开源框架。</li>
<li>熟练使用Myeclipse、Visual Studio、SPSS、Weka等工具。</li>
<li>熟悉常用机器学习算法原理与应用场景以及统计学相关知识。</li>
<li>熟悉常用算法与数据结构。</li>
<li>熟练掌握Mysql、Sql Server操作，有过数据库优化经验。</li>
<li>熟悉Linux操作，掌握Shell编程熟悉TCP/IP协议相关知识。</li>
<li>了解C++、Python、R语言。</li>
<li>了解Hadoop、Spark分布式计算框架。</li>
<li>了解BootStrap、Ajax、JQuery等前端开发技术。</li>
<li>了解Git、Cvs等版本控制操作。</li>
</ul>]]>
    
    </summary>
    
      <category term="2015" scheme="http://needpp.com/tags/2015/"/>
    
      <category term="about" scheme="http://needpp.com/tags/about/"/>
    
      <category term="me" scheme="http://needpp.com/tags/me/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[something]]></title>
    <link href="http://needpp.com/2015/03/18/something/"/>
    <id>http://needpp.com/2015/03/18/something/</id>
    <published>2015-03-17T16:00:00.000Z</published>
    <updated>2015-06-25T01:10:06.800Z</updated>
    <content type="html"><![CDATA[<figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">int</span> BinarySearch(<span class="built_in">int</span> a[],<span class="built_in">int</span> num)&#123;</span><br><span class="line">	<span class="built_in">int</span> len=a.lenght;</span><br><span class="line">	<span class="built_in">int</span> low=<span class="number">0</span>,high=len-<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(low&lt;=high)&#123;</span><br><span class="line">		<span class="built_in">int</span> mid=(low+high)/<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">if</span>(a[mid]==num)&#123;</span><br><span class="line">			<span class="keyword">return</span> mid;</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[mid]&lt;num)&#123;</span><br><span class="line">			low=mid+<span class="number">1</span>;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			high=mid-<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">int</span>  BinarySearch(<span class="built_in">int</span> a[],<span class="built_in">int</span> lo, <span class="built_in">int</span> hi,<span class="built_in">int</span> <span class="variable">key</span>)&#123;</span><br><span class="line">	<span class="keyword">if</span>(lo&lt;=hi)&#123;</span><br><span class="line">		<span class="built_in">int</span> mid=(low+high)/<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">key</span>==a[mid])</span><br><span class="line">			<span class="keyword">return</span> mid;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">key</span>&lt;a[mid]) </span><br><span class="line">			<span class="keyword">return</span> BinarySearch(<span class="variable">key</span>,lo,mid-<span class="number">1</span>,<span class="variable">key</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">key</span>&gt;a[mid]) </span><br><span class="line">			<span class="keyword">return</span> BinarySearch(<span class="variable">key</span>,mid+<span class="number">1</span>,high,<span class="variable">key</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// swap</span></span><br><span class="line"><span class="keyword">void</span> swap(<span class="built_in">int</span> a[] ,<span class="built_in">int</span> i,<span class="built_in">int</span> j)&#123;</span><br><span class="line">	<span class="built_in">int</span> temp=a[i];</span><br><span class="line">	a[i]=a[j];</span><br><span class="line">	a[j]=temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// select sort</span></span><br><span class="line"><span class="keyword">void</span> selectsort(<span class="built_in">int</span> a[],<span class="built_in">int</span> len)&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">		<span class="built_in">int</span> <span class="built_in">min</span>=i;</span><br><span class="line">		<span class="comment">//from i+1 to find the mini</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> j=i+<span class="number">1</span>;j&lt;len;j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[<span class="built_in">min</span>]&gt;a[j])&#123;</span><br><span class="line">				<span class="built_in">min</span>=j;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//swap with the i element</span></span><br><span class="line">		swap(a,i,<span class="built_in">min</span>);</span><br><span class="line">	&#125;	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> insertsort(<span class="built_in">int</span> a[],<span class="built_in">int</span> len)&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">1</span>;i&lt;len;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> j=i;j&gt;<span class="number">0</span>;j--)&#123;</span><br><span class="line">			<span class="keyword">if</span>(a[j]&lt;a[j-<span class="number">1</span>])&#123;</span><br><span class="line">				swap(a,j,j-<span class="number">1</span>)</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> shellsort(<span class="built_in">int</span> a[] ,<span class="built_in">int</span> len)&#123;</span><br><span class="line">	<span class="built_in">int</span> h=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(h&lt;len/<span class="number">3</span>) h=h*<span class="number">3</span>+<span class="number">1</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">while</span>(h&gt;=<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">1</span>;i&lt;h;i++)&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="built_in">int</span> j=i;j&gt;=h;j=j-h)&#123;</span><br><span class="line">				<span class="keyword">if</span>(a[j]&lt;a[j-h])&#123;</span><br><span class="line">					swap(a,j,j-h);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		h=h/<span class="number">3</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//heap swim to top</span></span><br><span class="line"><span class="comment">//from boot to top</span></span><br><span class="line"><span class="keyword">void</span> swim(<span class="built_in">int</span> k )&#123;</span><br><span class="line">	<span class="keyword">while</span>(k&gt;<span class="number">1</span>&amp;&amp;pq[k]&gt;pq[k/<span class="number">2</span>])&#123;</span><br><span class="line">		swap(pq,k,k/<span class="number">2</span>);</span><br><span class="line">		k=k/<span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> sink(<span class="built_in">int</span> k)&#123;</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">2</span>*k&lt;n)&#123;</span><br><span class="line">		<span class="built_in">int</span> j=<span class="number">2</span>*k;</span><br><span class="line">		<span class="keyword">if</span>(pq[j]&lt;pq[j+<span class="number">1</span>]) j++;</span><br><span class="line">		<span class="keyword">if</span>(pq[k]&gt;pq[j]) <span class="keyword">break</span>;</span><br><span class="line">		<span class="comment">//else swap the parent and the bigger chilren</span></span><br><span class="line">		swap(pq,k,j);</span><br><span class="line">		<span class="comment">//set the current node to chilren</span></span><br><span class="line">		k=j;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> insertheap(<span class="built_in">int</span> s)&#123;</span><br><span class="line">	pq[++N]=s;</span><br><span class="line">	swim(N);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">int</span> delheaptop()&#123;</span><br><span class="line">	<span class="built_in">int</span> <span class="built_in">max</span>=pq[<span class="number">1</span>];</span><br><span class="line">	swap(pq,<span class="number">1</span>,N--);</span><br><span class="line">	sink(<span class="number">1</span>); <span class="comment">//rebuild the heap from up to down</span></span><br><span class="line">	<span class="comment">//set the last to default value</span></span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">max</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> getvalue(Node root,<span class="built_in">int</span> <span class="variable">key</span>)&#123;</span><br><span class="line">	<span class="keyword">if</span>(root=<span class="keyword">null</span>) <span class="keyword">return</span>;</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">key</span>&gt;root.<span class="variable">key</span>) <span class="keyword">return</span> getvalue(root.right);</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">key</span>&lt;root.<span class="variable">key</span>) <span class="keyword">return</span> getvalue(root.left);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> root.value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> getvalue(<span class="built_in">int</span> <span class="variable">key</span>)&#123;</span><br><span class="line">	Node node=root;</span><br><span class="line">	<span class="keyword">while</span>(node!=<span class="keyword">null</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">key</span>&gt;node.<span class="variable">key</span>)&#123;</span><br><span class="line">			node=node.right;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">key</span>&lt;node.<span class="variable">key</span>)&#123;</span><br><span class="line">			node=node.left;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			result=node.value;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> partition(<span class="built_in">int</span> a[] ,<span class="built_in">int</span> left,<span class="built_in">int</span> right)&#123;</span><br><span class="line">	<span class="built_in">int</span> i=left,j=right+<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">		<span class="keyword">while</span>(a[++i]&lt;a[left])</span><br><span class="line">			<span class="keyword">if</span>(i==right) <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">while</span>(a[--j]&gt;a[left])</span><br><span class="line">			<span class="keyword">if</span>(i==left) <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">if</span>(i&gt;=j) <span class="keyword">break</span>;</span><br><span class="line">		swap(a,i,j)</span><br><span class="line">	&#125;</span><br><span class="line">	swap(a,j,left);</span><br><span class="line">	<span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="built_in">sort</span>(<span class="built_in">int</span> a[],<span class="built_in">int</span> low,<span class="built_in">int</span> high)&#123;</span><br><span class="line">	<span class="keyword">if</span>(low&gt;=high) <span class="keyword">return</span>;</span><br><span class="line">	<span class="built_in">int</span> partition=partition(a,low,high);</span><br><span class="line">	<span class="built_in">sort</span>(a,low,partion-<span class="number">1</span>);</span><br><span class="line">	<span class="built_in">sort</span>(a,partion+<span class="number">1</span>,high);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> dfs(Graph g,<span class="built_in">int</span> v)&#123;</span><br><span class="line">	marked[v]=<span class="keyword">true</span>;</span><br><span class="line">	count++;</span><br><span class="line">	foreach(<span class="built_in">int</span> vertical in g.GetAdjacency(v))&#123;</span><br><span class="line">		<span class="keyword">if</span>(!marked(vertical))&#123;</span><br><span class="line">			dfs(g,vertical);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="bu]]>
    </summary>
    
      <category term="others" scheme="http://needpp.com/tags/others/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[spark demo to save...]]></title>
    <link href="http://needpp.com/2015/03/18/spark%20demo%20to%20save.../"/>
    <id>http://needpp.com/2015/03/18/spark demo to save.../</id>
    <published>2015-03-17T16:00:00.000Z</published>
    <updated>2015-06-25T01:10:06.800Z</updated>
    <content type="html"><![CDATA[<figure class="highlight openscad"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by spark on 15-3-18.</span><br><span class="line"> */</span></span><br><span class="line"><span class="built_in">import</span> org.apache.spark.SparkContext._</span><br><span class="line"><span class="built_in">import</span> org.apache.spark.&#123;SparkContext, SparkConf&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** Computes an approximation to pi */</span></span><br><span class="line">object SparkDemo &#123;</span><br><span class="line">  def main<span class="params">(args: Array[String])</span> &#123;</span><br><span class="line">    <span class="keyword">if</span><span class="params">(args.length!=<span class="number">2</span>)</span>&#123;</span><br><span class="line">      System.err.println<span class="params">(<span class="string">"Usage : SparkDemo &lt;input file&gt; &lt;output file &gt;"</span>)</span></span><br><span class="line">      System.exit<span class="params">(<span class="number">1</span>)</span></span><br><span class="line">    &#125;</span><br><span class="line">    val conf = new SparkConf<span class="params">()</span>.setMaster<span class="params">(<span class="string">"local"</span>)</span>.setAppName<span class="params">(<span class="string">"WordCount"</span>)</span></span><br><span class="line">    val spark = new SparkContext<span class="params">(conf)</span></span><br><span class="line"></span><br><span class="line">    val file=spark.textFile<span class="params">(args<span class="params">(<span class="number">0</span>)</span>)</span></span><br><span class="line">    val counts=file.map<span class="params">(<span class="params">(_,<span class="number">1</span>)</span>)</span>.reduceByKey<span class="params">(_+_)</span></span><br><span class="line">    counts.saveAsTextFile<span class="params">(args<span class="params">(<span class="number">1</span>)</span>)</span></span><br><span class="line">    spark.stop<span class="params">()</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<figure class="highlight openscad"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line]]>
    </summary>
    
      <category term="spark" scheme="http://needpp.com/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[shell 判断hadoop 是否启动成功]]></title>
    <link href="http://needpp.com/2015/01/18/shell%20%E5%88%A4%E6%96%ADhadoop%20%E6%98%AF%E5%90%A6%E5%90%AF%E5%8A%A8%E6%88%90%E5%8A%9F/"/>
    <id>http://needpp.com/2015/01/18/shell 判断hadoop 是否启动成功/</id>
    <published>2015-01-17T16:00:00.000Z</published>
    <updated>2015-06-25T01:10:06.796Z</updated>
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="shebang">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'启动hadoop环境'</span></span><br><span class="line"><span class="comment">#/home/spark/soft/hadoop-2.5.2/sbin/start-all.sh</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'查看hadoop环境'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">h1</span></span>()&#123;</span><br><span class="line"></span><br><span class="line">jps| awk <span class="string">'</span><br><span class="line">BEGIN&#123;count=0&#125;</span><br><span class="line">&#123;</span><br><span class="line">if($2=="NameNode" || $2=="SecondaryNameNode" || $2=="JobTracker")&#123;</span><br><span class="line">	count+=1</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">if(count==3)&#123;</span><br><span class="line">print("start v1 success")</span><br><span class="line">&#125;else &#123;</span><br><span class="line">print("v1 fail start")</span><br><span class="line">&#125;</span><br><span class="line">&#125;'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">h2</span></span>()&#123;</span><br><span class="line"></span><br><span class="line">jps| awk <span class="string">'</span><br><span class="line">BEGIN&#123;count=0&#125;</span><br><span class="line">&#123;</span><br><span class="line">if($2=="NameNode" || $2=="SecondaryNameNode" || $2=="ResourceManager")&#123;</span><br><span class="line">	count+=1</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">END&#123;</span><br><span class="line">if(count==3)&#123;</span><br><span class="line">print("start v2 success")</span><br><span class="line">&#125;else &#123;</span><br><span class="line">print("v2 fail start")</span><br><span class="line">&#125;</span><br><span class="line">&#125;'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">version=`hadoop version | awk <span class="string">'&#123;if(NR==1)&#123;print $2 &#125;&#125;'</span> | cut -b <span class="number">1</span>`</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$version</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$version</span> <span class="operator">-gt</span> <span class="number">1</span> ]; </span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'hadoop v2'</span>;</span><br><span class="line">h2;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">'hadoop v1'</span>;</span><br><span class="line">h1;</span><br><span class="line"><span class="keyword">fi</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> edu.dcy.shell;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.LineNumberReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RunShellDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException, IOException </span>&#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			</span><br><span class="line">			Runtime rt=Runtime.getRuntime();</span><br><span class="line">            Process process = rt.exec(<span class="keyword">new</span> String[]&#123;<span class="string">"/home/spark/test.sh"</span>,<span class="string">"5"</span>,<span class="string">"dd"</span>&#125;);</span><br><span class="line">            InputStreamReader ir = <span class="keyword">new</span> InputStreamReader(process.getInputStream());</span><br><span class="line">            LineNumberReader input = <span class="keyword">new</span> LineNumberReader(ir);</span><br><span class="line">            String line=<span class="string">""</span>;</span><br><span class="line">            <span class="keyword">while</span>((line = input.readLine()) != <span class="keyword">null</span>)</span><br><span class="line">                System.out.println(line);</span><br><span class="line">            input.close();</span><br><span class="line">            ir.close();</span><br><span class="line">            <span class="keyword">int</span> exitVal = process.waitFor(); </span><br><span class="line"><span class="comment">//            System.out.println("exitval==="+exitVal);</span></span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="shebang">#!/bin/bash</span></span><br><span ]]>
    </summary>
    
      <category term="hadoop" scheme="http://needpp.com/tags/hadoop/"/>
    
      <category term="shell" scheme="http://needpp.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu  配置 动态静态ip]]></title>
    <link href="http://needpp.com/2015/01/13/Ubuntu%20%20%E9%85%8D%E7%BD%AE%20%E5%8A%A8%E6%80%81%E9%9D%99%E6%80%81ip/"/>
    <id>http://needpp.com/2015/01/13/Ubuntu  配置 动态静态ip/</id>
    <published>2015-01-12T16:00:00.000Z</published>
    <updated>2015-06-26T05:01:50.893Z</updated>
    <content type="html"><![CDATA[<p>网络Ubuntu Linux配置文件是：/etc/network/interfaces,打开后里面可设置DHCP或手动设置静态ip。auto eth0，意思是让网卡开机自动挂载。</p>
<h3 id="以DHCP方式配置网卡">以DHCP方式配置网卡</h3><ul>
<li>编辑文件/etc/network/interfaces：<figure class="highlight fsharp"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/network/interfaces</span><br><span class="line">并用下面的行来替换有关eth0的行：</span><br><span class="line"># The primary network <span class="keyword">interface</span> - <span class="keyword">use</span> DHCP <span class="keyword">to</span> find our address</span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet dhcp</span><br><span class="line">用下面的命令使网络设置生效：</span><br><span class="line">sudo /etc/init.d/networking restart</span><br><span class="line">也可以在命令行下直接输入下面的命令来获取地址</span><br><span class="line">sudo dhclient eth0</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="为网卡配置静态IP地址">为网卡配置静态IP地址</h3><ul>
<li>编辑文件/etc/network/interfaces：<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="title">sudo</span> vi /etc/network/interfaces</span><br><span class="line">并用下面的行来替换有关eth0的行：</span><br><span class="line"><span class="comment"># The primary network interface</span></span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet static</span><br><span class="line">address <span class="number">192.168.2.1</span></span><br><span class="line">gateway <span class="number">192.168.2.254</span></span><br><span class="line">netmask <span class="number">255.255.255.0</span></span><br><span class="line"><span class="comment">#network 192.168.2.0</span></span><br><span class="line"><span class="comment">#broadcast 192.168.2.255</span></span><br><span class="line">将上面的ip地址等信息换成你自己就可以了.用下面的命令使网络设置生效：</span><br><span class="line">sudo /etc/init.d/networking restart</span><br></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<ul>
<li><p>设置主机名称(hostname)[可选]</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">使用下面的命令来查看当前主机的主机名称：</span><br><span class="line">sudo <span class="regexp">/bin/</span>hostname</span><br><span class="line">使用下面的命令来设置当前主机的主机名称：</span><br><span class="line">sudo <span class="regexp">/bin/</span>hostname newname</span><br><span class="line">系统启动时,它会从<span class="regexp">/etc/</span>hostname来读取主机的名称。</span><br></pre></td></tr></table></figure>
</li>
<li><p>Ubuntu Linux配置DNS</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="comment">#编辑/etc/resolv.conf</span></span><br><span class="line"><span class="title">nameserver</span> <span class="number">192.168.2.2</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>手动重启网络服务：</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">sudo <span class="regexp">/etc/i</span>nit.d<span class="regexp">/networking restart</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="参考">参考</h3><p><a href="http://www.cnblogs.com/empire/archive/2011/01/10/1931877.html" target="_blank" rel="external">http://www.cnblogs.com/empire/archive/2011/01/10/1931877.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>网络Ubuntu Linux配置文件是：/etc/network/interfaces,打开后里面可设置DHCP或手动设置静态ip。auto eth0，意思是让网卡开机自动挂载。</p>
<h3 id="以DHCP方式配置网卡">以DHCP方式配置网卡</h3><ul>
<li>编辑文件/etc/network/interfaces：<figure class="highlight fsharp"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/network/interfaces</span><br><span class="line">并用下面的行来替换有关eth0的行：</span><br><span class="line"># The primary network <span class="keyword">interface</span> - <span class="keyword">use</span> DHCP <span class="keyword">to</span> find our address</span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet dhcp</span><br><span class="line">用下面的命令使网络设置生效：</span><br><span class="line">sudo /etc/init.d/networking restart</span><br><span class="line">也可以在命令行下直接输入下面的命令来获取地址</span><br><span class="line">sudo dhclient eth0</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="为网卡配置静态IP地址">为网卡配置静态IP地址</h3><ul>
<li>编辑文件/etc/network/interfaces：<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="title">sudo</span> vi /etc/network/interfaces</span><br><span class="line">并用下面的行来替换有关eth0的行：</span><br><span class="line"><span class="comment"># The primary network interface</span></span><br><span class="line">auto eth0</span><br><span class="line">iface eth0 inet static</span><br><span class="line">address <span class="number">192.168.2.1</span></span><br><span class="line">gateway <span class="number">192.168.2.254</span></span><br><span class="line">netmask <span class="number">255.255.255.0</span></span><br><span class="line"><span class="comment">#network 192.168.2.0</span></span><br><span class="line"><span class="comment">#broadcast 192.168.2.255</span></span><br><span class="line">将上面的ip地址等信息换成你自己就可以了.用下面的命令使网络设置生效：</span><br><span class="line">sudo /etc/init.d/networking restart</span><br></pre></td></tr></table></figure>
</li>
</ul>]]>
    
    </summary>
    
      <category term="ip" scheme="http://needpp.com/tags/ip/"/>
    
      <category term="ubuntu" scheme="http://needpp.com/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu 编译安装Ｒ]]></title>
    <link href="http://needpp.com/2015/01/11/Ubuntu%20%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85%EF%BC%B2/"/>
    <id>http://needpp.com/2015/01/11/Ubuntu 编译安装Ｒ/</id>
    <published>2015-01-10T16:00:00.000Z</published>
    <updated>2015-06-26T04:01:05.788Z</updated>
    <content type="html"><![CDATA[<p>最近需要对车辆数据进行分析统计，小学Ｒ一下，ubuntu仓库所带Ｒ版本过低，进行时间序列分析的包无法正常安装，顾自编译。记录如下，仅作备忘。</p>
<ul>
<li><p>解压</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="tag">tar</span> <span class="tag">-zvxf</span> <span class="tag">R-3</span><span class="class">.1</span><span class="class">.2</span><span class="class">.tar</span><span class="class">.gz</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>安装必要工具包</p>
<figure class="highlight q"><table><tr><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install build-essential gfortran  libreadline6-<span class="built_in">dev</span>   libxt-<span class="built_in">dev</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>配置安装选项</p>
<figure class="highlight puppet"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/<span class="literal">home</span>/spark/soft/<span class="constant">R</span> --<span class="literal">enable</span>-<span class="constant">R</span>-shlib</span><br><span class="line">　　注意prefix参数可以设置<span class="constant">R</span>将要安装的路径，<span class="literal">enable</span>-<span class="constant">R</span>-shlib可以保证lib目录下的动态库能够共享，这个选项一定不要忘记添加，否则以后安装某些包的时候会出现<span class="constant">Error</span> <span class="keyword">in</span> dyn.load的错误。</span><br></pre></td></tr></table></figure>
</li>
<li><p>编译</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="built_in">make</span> -j <span class="number">4</span>   #可以单独使用 <span class="built_in">make</span> 这里指定了使用四个线程进行编译</span><br><span class="line"><span class="built_in">make</span> install</span><br></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<ul>
<li>Rstudio<br>至此，Ｒ安装完毕，不习惯使用命令行的方式可以添加一个界面，Rstudio.</li>
</ul>
<p><img src="http://needpp.qiniudn.com/2015/01/11/a1e9cd76-9947-11e4-a385-f23c9156bf7b.png" alt=""></p>
<h3 id="参考链接">参考链接</h3><p><a href="http://mirrors.xmu.edu.cn/CRAN/" target="_blank" rel="external">http://mirrors.xmu.edu.cn/CRAN/</a><br><a href="http://jliblog.com/archives/368" target="_blank" rel="external">http://jliblog.com/archives/368</a><br><a href="http://www.rstudio.com/products/rstudio/download/" target="_blank" rel="external">http://www.rstudio.com/products/rstudio/download/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近需要对车辆数据进行分析统计，小学Ｒ一下，ubuntu仓库所带Ｒ版本过低，进行时间序列分析的包无法正常安装，顾自编译。记录如下，仅作备忘。</p>
<ul>
<li><p>解压</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="tag">tar</span> <span class="tag">-zvxf</span> <span class="tag">R-3</span><span class="class">.1</span><span class="class">.2</span><span class="class">.tar</span><span class="class">.gz</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>安装必要工具包</p>
<figure class="highlight q"><table><tr><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install build-essential gfortran  libreadline6-<span class="built_in">dev</span>   libxt-<span class="built_in">dev</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>配置安装选项</p>
<figure class="highlight puppet"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/<span class="literal">home</span>/spark/soft/<span class="constant">R</span> --<span class="literal">enable</span>-<span class="constant">R</span>-shlib</span><br><span class="line">　　注意prefix参数可以设置<span class="constant">R</span>将要安装的路径，<span class="literal">enable</span>-<span class="constant">R</span>-shlib可以保证lib目录下的动态库能够共享，这个选项一定不要忘记添加，否则以后安装某些包的时候会出现<span class="constant">Error</span> <span class="keyword">in</span> dyn.load的错误。</span><br></pre></td></tr></table></figure>
</li>
<li><p>编译</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="built_in">make</span> -j <span class="number">4</span>   #可以单独使用 <span class="built_in">make</span> 这里指定了使用四个线程进行编译</span><br><span class="line"><span class="built_in">make</span> install</span><br></pre></td></tr></table></figure>
</li>
</ul>]]>
    
    </summary>
    
      <category term="R" scheme="http://needpp.com/tags/R/"/>
    
      <category term="tools" scheme="http://needpp.com/tags/tools/"/>
    
      <category term="ubuntu" scheme="http://needpp.com/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[mysql 远程连接、数据库备份、数据导出]]></title>
    <link href="http://needpp.com/2015/01/07/mysql%20%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E3%80%81%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%87%E4%BB%BD%E3%80%81%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA/"/>
    <id>http://needpp.com/2015/01/07/mysql 远程连接、数据库备份、数据导出/</id>
    <published>2015-01-06T16:00:00.000Z</published>
    <updated>2015-06-26T04:00:22.696Z</updated>
    <content type="html"><![CDATA[<h3 id="mysql_远程连接、数据库备份、数据导出">mysql 远程连接、数据库备份、数据导出</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'hello'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'hello123'</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">mysql -<span class="keyword">h</span> server_ip  -<span class="keyword">u</span> hello -p  hello123</span><br></pre></td></tr></table></figure>
<p>error<br><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">ERROR <span class="number">2003</span> (HY000): Can't connect <span class="keyword">to</span> MySQL server <span class="function_start"><span class="keyword">on</span></span> '<span class="number">192.168</span>.1.3' (<span class="number">111</span>)</span><br></pre></td></tr></table></figure></p>
<p>update my.cnf<br><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">whereis mysql</span><br><span class="line">## promote</span><br><span class="line">spark<span class="annotation">@spark</span>-<span class="string">desktop:</span>~$ whereis mysql</span><br><span class="line"><span class="string">mysql:</span> <span class="regexp">/usr/</span>bin<span class="regexp">/mysql /</span>etc<span class="regexp">/mysql /</span>usr<span class="regexp">/lib/</span>mysql <span class="regexp">/usr/</span>bin<span class="regexp">/X11/</span>mysql <span class="regexp">/usr/</span>include<span class="regexp">/mysql /</span>usr<span class="regexp">/share/</span>mysql <span class="regexp">/usr/</span>share<span class="regexp">/man/</span>man1/mysql.1.gz</span><br><span class="line">spark<span class="annotation">@spark</span>-<span class="string">desktop:</span>~$</span><br></pre></td></tr></table></figure></p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"># <span class="keyword">find</span> the <span class="keyword">file</span> of my.<span class="keyword">conf</span> <span class="built_in">and</span> <span class="keyword">update</span> it </span><br><span class="line">注释掉这一行，实现全局监听</span><br><span class="line">#bind-address           = <span class="number">127.0</span>.<span class="number">0.1</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>restar mysql<br><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">sudo <span class="regexp">/etc/i</span>nit.d／mysql restart</span><br></pre></td></tr></table></figure></p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">grant all privileges on *.* to &#39;car&#39;@&#39;%&#39; identified by &#39;car123456&#39;;</span><br></pre></td></tr></table></figure>
<p>done,good job.</p>
<h3 id="mysqldump">mysqldump</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>.导出整个数据库</span><br><span class="line"> mysqldump -u 用户名 -<span class="tag">p</span> 数据库名 &gt; 导出的文件名    </span><br><span class="line"> mysqldump -u wcnc -<span class="tag">p</span> smgp_apps_wcnc &gt; wcnc<span class="class">.sql</span></span><br><span class="line"><span class="number">2</span>.导出一个表</span><br><span class="line"> mysqldump -u 用户名 -<span class="tag">p</span> 数据库名 表名&gt; 导出的文件名</span><br><span class="line"> mysqldump -u wcnc -<span class="tag">p</span> smgp_apps_wcnc users&gt; wcnc_users<span class="class">.sql</span></span><br><span class="line"><span class="number">3</span>.导出一个数据库结构</span><br><span class="line">  mysqldump -u wcnc -<span class="tag">p</span> -d --add-drop-<span class="tag">table</span> smgp_apps_wcnc &gt;d:\wcnc_db<span class="class">.sql</span></span><br><span class="line"> -d 没有数据 --add-drop-<span class="tag">table</span> 在每个create语句之前增加一个drop <span class="tag">table</span> </span><br><span class="line"><span class="number">4</span>.导入数据库</span><br><span class="line">  常用source 命令</span><br><span class="line">  进入mysql数据库控制台，</span><br><span class="line">  如mysql -u root -p</span><br></pre></td></tr></table></figure>
<h3 id="mysql_load_file">mysql load file</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">load</span>  <span class="keyword">data</span> <span class="keyword">local</span> <span class="keyword">infile</span> <span class="string">'/home/scut1/data/xx.txt'</span>   <span class="keyword">into</span> <span class="keyword">table</span> yourtablename</span><br><span class="line"><span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'\t'</span> <span class="keyword">lines</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'\n'</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> A <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/home/scut1/data/xx.txt'</span> <span class="keyword">fields</span> </span><br><span class="line"><span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'\t'</span> <span class="keyword">lines</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'\n'</span></span></span><br></pre></td></tr></table></figure>
<h3 id="ps">ps</h3><p>今天在测试导入数据的时候，发现一点问题。提示：ERROR 1148 (42000): The used command is not allowed with this MySQL version原因是；如果编译安装mysql时没有指定–enable-local-infile，那么在使用上述命令时会报以上的错误.<br>使用apt-get 安装的mysql,不想自己重新编译。那么可以通过使用指定命令的方式进行执行数据的导入操作。</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">mysql -<span class="keyword">u</span> root -p  mydb_name --<span class="keyword">local</span>-<span class="keyword">infile</span>=1 -<span class="keyword">e</span>　'load data <span class="keyword">local</span> <span class="keyword">infile</span> <span class="string">"/tmp/t.csv"</span>  into <span class="keyword">table</span> u_table fields terminated <span class="keyword">by</span> <span class="string">","</span> lines terminated <span class="keyword">by</span> <span class="string">"\n"</span>'</span><br></pre></td></tr></table></figure>
<p>ok done!</p>
<h3 id="编码坑货">编码坑货</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> fun <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">create <span class="tag">table</span> huoche(</span><br><span class="line">    id <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">18</span>)</span></span> primary key,</span><br><span class="line">    name <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">20</span>)</span></span>,</span><br><span class="line">    tel <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">15</span>)</span></span>,</span><br><span class="line">    mail <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">50</span>)</span></span>,</span><br><span class="line">    uname <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">20</span>)</span></span>,</span><br><span class="line">    pwd <span class="function"><span class="title">varchar</span><span class="params">(<span class="number">20</span>)</span></span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">mysql -<span class="keyword">u</span> root -p fun --<span class="keyword">local</span>-<span class="keyword">infile</span>=1 -<span class="keyword">e</span> 'load data <span class="keyword">local</span> <span class="keyword">infile</span> <span class="string">"/tmp/t.csv"</span>  into <span class="keyword">table</span> huoche fields terminated <span class="keyword">by</span> <span class="string">","</span> lines terminated <span class="keyword">by</span> <span class="string">"\n"</span>'</span><br></pre></td></tr></table></figure>
<p>ps:每次复制执行的时候总会报错，手动打一次正常，逗我玩吗？　可能中间有某些分割符号隐藏了。。。<br>至此，导入中文，还有小秘密哦。。。哈哈</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="mysql_远程连接、数据库备份、数据导出">mysql 远程连接、数据库备份、数据导出</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">PRIVILEGES</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'hello'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'hello123'</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">mysql -<span class="keyword">h</span> server_ip  -<span class="keyword">u</span> hello -p  hello123</span><br></pre></td></tr></table></figure>
<p>error<br><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">ERROR <span class="number">2003</span> (HY000): Can't connect <span class="keyword">to</span> MySQL server <span class="function_start"><span class="keyword">on</span></span> '<span class="number">192.168</span>.1.3' (<span class="number">111</span>)</span><br></pre></td></tr></table></figure></p>
<p>update my.cnf<br><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">whereis mysql</span><br><span class="line">## promote</span><br><span class="line">spark<span class="annotation">@spark</span>-<span class="string">desktop:</span>~$ whereis mysql</span><br><span class="line"><span class="string">mysql:</span> <span class="regexp">/usr/</span>bin<span class="regexp">/mysql /</span>etc<span class="regexp">/mysql /</span>usr<span class="regexp">/lib/</span>mysql <span class="regexp">/usr/</span>bin<span class="regexp">/X11/</span>mysql <span class="regexp">/usr/</span>include<span class="regexp">/mysql /</span>usr<span class="regexp">/share/</span>mysql <span class="regexp">/usr/</span>share<span class="regexp">/man/</span>man1/mysql.1.gz</span><br><span class="line">spark<span class="annotation">@spark</span>-<span class="string">desktop:</span>~$</span><br></pre></td></tr></table></figure></p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"># <span class="keyword">find</span> the <span class="keyword">file</span> of my.<span class="keyword">conf</span> <span class="built_in">and</span> <span class="keyword">update</span> it </span><br><span class="line">注释掉这一行，实现全局监听</span><br><span class="line">#bind-address           = <span class="number">127.0</span>.<span class="number">0.1</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="mysql" scheme="http://needpp.com/tags/mysql/"/>
    
  </entry>
  
</feed>